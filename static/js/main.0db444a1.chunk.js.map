{"version":3,"sources":["components/Statistic/Statistic.module.css","components/Section/Section.js","components/Button/Button.jsx","components/Statistic/Statistic.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js","components/Button/Button.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css"],"names":["module","exports","Section","title","children","className","s","section","classNames","require","Button","name","onClick","defaultStyles","btn","classes","prototypes","PropTypes","string","func","node","Statistic","handleRefresh","good","neutral","bad","total","positivePercentage","box","elem","elemTxt","buttonsStyles","refreshBtn","type","FeedbackOptions","options","map","option","btnStats","prototype","number","isRequired","Notification","message","notification","App","props","useState","setGood","setNeutral","setBad","sumTotal","setSumTotal","goodFeedback","setGoodFeedback","useEffect","startState","JSON","parse","localStorage","getItem","Math","floor","setItem","stringify","e","target","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0db444a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Statistic_box__2U9zU\",\"title\":\"Statistic_title__NgLSJ\",\"elem\":\"Statistic_elem__3nysN\",\"elemTxt\":\"Statistic_elemTxt__nstg2\"};","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport s from './Section.module.css'\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  )\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.arrayOf(PropTypes.element),\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport s from './Button.module.css'\r\nconst classNames = require('classnames')\r\n\r\nexport default function Button({ className, name, onClick, children, ...args }) {\r\n  const defaultStyles = s.btn\r\n  const classes = classNames(defaultStyles, className)\r\n\r\n  return (\r\n    <button className={classes} name={name} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.prototypes = {\r\n  name: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nimport Button from '../Button/Button'\r\nimport s from './Statistic.module.css'\r\nimport buttonsStyles from '../Button/Button.module.css'\r\nexport default function Statistic({ handleRefresh, good, neutral, bad, total, positivePercentage }) {\r\n  const handleRefreshClick = () => {\r\n    handleRefresh()\r\n  }\r\n\r\n  return (\r\n    <div className={s.box}>\r\n      <h2 className={s.title}>Statistics:</h2>\r\n      <div>\r\n        <p className={s.elem}>\r\n          <span className={s.elemTxt}>Good: </span> {good}\r\n        </p>\r\n        <p className={s.elem}>\r\n          <span className={s.elemTxt}>Neutral: </span> {neutral}\r\n        </p>\r\n        <p className={s.elem}>\r\n          <span className={s.elemTxt}>Bad: </span>\r\n          {bad}\r\n        </p>\r\n        <p className={s.elem}>\r\n          <span className={s.elemTxt}>Total: </span>\r\n          {total}\r\n        </p>\r\n        <p className={s.elem}>\r\n          <span className={s.elemTxt}>Positive Feedback: </span>\r\n          {positivePercentage}%\r\n        </p>\r\n      </div>\r\n      <Button\r\n        className={buttonsStyles.refreshBtn}\r\n        type=\"button\"\r\n        aria-label=\"Refresh stats\"\r\n        onClick={handleRefreshClick}\r\n      >\r\n        Refresh stats\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\nStatistic.prototype = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '../Button/Button'\r\nimport s from '../Button/Button.module.css'\r\nexport default function FeedbackOptions({ options, onClick }) {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <Button key={option} type=\"button\" className={s.btnStats} name={option} onClick={onClick}>\r\n          {option}\r\n        </Button>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  leaveFeedback: PropTypes.func,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport s from './Notification.module.css'\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={s.notification}>{message}</p>\r\n}\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport Section from './components/Section'\r\nimport Statistic from './components/Statistic'\r\nimport FeedbackOptions from './components/FeedbackOptions'\r\nimport Notification from './components/Notification'\r\n\r\nfunction App(props) {\r\n  const [good, setGood] = useState(0)\r\n  const [neutral, setNeutral] = useState(0)\r\n  const [bad, setBad] = useState(0)\r\n  const [sumTotal, setSumTotal] = useState(0)\r\n  const [goodFeedback, setGoodFeedback] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const startState = JSON.parse(localStorage.getItem('state'))\r\n    const { good, neutral, bad, sumTotal, goodFeedback } = startState\r\n    setGood(good)\r\n    setBad(bad)\r\n    setNeutral(neutral)\r\n    setSumTotal(sumTotal)\r\n    setGoodFeedback(goodFeedback)\r\n  }, [])\r\n\r\n  const handleChange = e => {\r\n    switch (e.target.name) {\r\n      case 'good':\r\n        setGood(prev => prev + 1)\r\n        break\r\n\r\n      case 'neutral':\r\n        setNeutral(prev => prev + 1)\r\n        break\r\n\r\n      case 'bad':\r\n        setBad(prev => prev + 1)\r\n        break\r\n\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSumTotal(good + bad + neutral)\r\n  }, [good, neutral, bad])\r\n\r\n  useEffect(() => {\r\n    setGoodFeedback(() => {\r\n      return Math.floor((100 * good) / sumTotal)\r\n    })\r\n  }, [good, sumTotal])\r\n\r\n  useEffect(() => {\r\n    return localStorage.setItem(\r\n      'state',\r\n      JSON.stringify({\r\n        good,\r\n        neutral,\r\n        bad,\r\n        sumTotal,\r\n        goodFeedback,\r\n      }),\r\n    )\r\n  })\r\n  const handleRefresh = () => {\r\n    setGood(0)\r\n    setBad(0)\r\n    setNeutral(0)\r\n    setSumTotal(0)\r\n    setGoodFeedback(0)\r\n  }\r\n  return (\r\n    <Section title=\"Please leave feedback\">\r\n      <FeedbackOptions options={['good', 'neutral', 'bad']} onClick={handleChange} />\r\n      {sumTotal > 0 ? (\r\n        <Statistic\r\n          handleRefresh={handleRefresh}\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={sumTotal}\r\n          positivePercentage={goodFeedback}\r\n        />\r\n      ) : (\r\n        <Notification message={'No feedback given'} />\r\n      )}\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__32jlW\",\"btnStats\":\"Button_btnStats__2sSZg\",\"refreshBtn\":\"Button_refreshBtn__3Yv7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__VKGiC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3uXfO\"};"],"sourceRoot":""}